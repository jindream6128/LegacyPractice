<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- NO, PRODUCTNAME, productOrigin, productPrice, productCategory, PRODUCTFILENAME, ID, TODAY

private int    no;
	private String productName;
	private String productOrigin;
	private int productPrice;
	private String productCategory;
	private String fileName;
	private String id;
	private String seller;
	private String regdate; -->
<mapper namespace="com.bit.dto.cartMapper">
    <resultMap type="product" id="prodcutListID">
        <result property="no" column="no"/>
        <result property="productName" column="PRODUCTNAME"/>
        <result property="productOrigin" column="PRODUCTLOCATION"/>
        <result property="productPrice" column="PRODUCTPRICE"/>
        <result property="productCategory" column="PRODUCTCATEGORY"/>
        <result property="fileName" column="PRODUCTFILENAME"/>
        <result property="id" column="ID"/>
        <result property="regdate" column="TODAY"/>
    </resultMap>

    <select id="idPassCheck" parameterType="java.util.HashMap" resultType="java.lang.String">
        SELECT PASSWORD FROM ADMINMEMBER WHERE ID=#{id}
    </select>


    <insert id="productAdminInsert" parameterType="product">
        INSERT INTO
            PRODUCT(PRODUCTNAME,PRODUCTLOCATION,PRODUCTPRICE,
                    PRODUCTCATEGORY,PRODUCTFILENAME,ID)
        VALUES(#{productName},#{productOrigin},#{productPrice},
               #{productCategory},#{fileName},#{id})
    </insert>

    <!--함수처럼 그냥 쿼리문 만들어놓기 -->
    <sql id="productListSQL">
        SELECT * FROM PRODUCT
    </sql>

    <select id="allProductList" resultType="product" resultMap="prodcutListID">
        <include refid="productListSQL"></include>
        ORDER BY today desc
    </select>

    <select id="prodcutList" parameterType="java.util.HashMap" resultType="product" resultMap="prodcutListID">
        <include refid="productListSQL"></include>
        <where>
            ID=#{id}
        </where>
    </select>


    <!-- private int    no;
    private String productName;
    private String productOrigin;
    private int productPrice;
    private String productCategory;
    private String fileName;
    private String id;
    private String seller;
    private String regdate;
    private String state; -->

    <update id="productAdminUpdate" parameterType="product">
        UPDATE PRODUCT
        SET PRODUCTNAME=#{productName},PRODUCTLOCATION=#{productOrigin},
        PRODUCTPRICE=#{productPrice},PRODUCTCATEGORY=#{productCategory}
        <choose>
            <when test="fileName!=null">
                ,PRODUCTFILENAME=#{fileName}
            </when>
        </choose>
        WHERE NO=#{no}
    </update>

    <delete id="productAdminDelete" parameterType="java.lang.Integer">
        DELETE FROM PRODUCT WHERE NO=#{VALUE}
    </delete>

    <select id="productInfo" parameterType="java.lang.Integer" resultType="product" resultMap="prodcutListID">
        <include refid="productListSQL"></include>
        <where>
            no=#{no}
        </where>
    </select>

    <insert id="addBasket" parameterType="basket">
        INSERT INTO BASKET(USERID,PRODUCTNO) VALUES (#{USERID},#{PRODUCTNO})
    </insert>


    <select id="checkBasketdata" parameterType="basket" resultType="java.lang.String">
        select BASKETNO from BASKET where USERID = #{USERID} and PRODUCTNO = #{PRODUCTNO}
    </select>

    <update id="upcntBasket" parameterType="basket">
        update  BASKET set PRODUCTCOUNT = PRODUCTCOUNT + 1 where userid = #{USERID} and PRODUCTNO = #{PRODUCTNO}
    </update>
    
    <select id="selectBasketAll" parameterType="java.lang.String" resultType="product" resultMap="prodcutListID">
        SELECT P.no, P.productname, P.productlocation, P.productprice, P.productcategory, P.productfilename, P.id, P.today, B.productCount
        FROM PRODUCT AS P
                 INNER JOIN
             BASKET AS B
        WHERE P.no = B.PRODUCTNO
          and B.USERID=#{id}
        ORDER BY TODAY DESC;
    </select>

    <delete id="deleteBasketproduct" parameterType="basket">
        DELETE FROM Basket where USERID =#{USERID} and PRODUCTNO = #{PRODUCTNO}
    </delete>

    <select id="searchProduct" parameterType="java.util.HashMap" resultMap="prodcutListID" resultType="product">
        select * from product
            <choose>
                <when test="query != null and data != null">
                    <where>
                        ${query} LIKE CONCAT('%', "${data}", '%');
                    </where>
                </when>
            </choose>
    </select>


    <select id="cartlistSearch" parameterType="java.util.HashMap" resultType="product" resultMap="prodcutListID">
        SELECT P.no, P.productname, P.productlocation, P.productprice, P.productcategory, P.productfilename, P.id, P.today, B.productCount
        FROM PRODUCT AS P
                 INNER JOIN
             BASKET AS B
        WHERE P.no = B.PRODUCTNO
          and B.USERID=#{id} and P.PRODUCTNAME LIKE CONCAT('%',#{cartlistquery},'%')
        ORDER BY TODAY DESC;
    </select>

    <select id="selectproductCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select PRODUCTCOUNT from BASKET where userid=#{id} and productno=#{productno};
    </select>

    <update id="downproductCnt" parameterType="java.util.HashMap">
        update BASKET set PRODUCTCOUNT =bitdb.BASKET.PRODUCTCOUNT-1 where userid=#{id} and PRODUCTNO= #{productno};
    </update>

    <update id="plusproductCnt" parameterType="java.util.HashMap">
        update BASKET set PRODUCTCOUNT =bitdb.BASKET.PRODUCTCOUNT+1 where userid=#{id} and PRODUCTNO= #{productno};
    </update>
</mapper>








